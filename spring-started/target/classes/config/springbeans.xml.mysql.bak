<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
		
<!-- 在做junit测试时候把JNDI数据源注释 	
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/kwjctb2</value>
		</property>
	</bean> -->
	<!-- DataSource -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<property name="url" value="jdbc:oracle:thin:@192.168.8.113:1521:ORCL" />
		<property name="username" value="kwjctb2" />
		<property name="password" value="missu" />
		<property name="filters" value="stat" />
		<property name="maxActive" value="8" />
		<property name="initialSize" value="2" />
		<property name="maxWait" value="30" />
		<property name="minIdle" value="4" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="maxOpenPreparedStatements" value="20" />
		<property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:config.properties" />
	<!-- 扫描文件（自动将servicec层注入） 添加exclude-filter是防止扫描到controller注解导致事务失败-->
	<context:component-scan base-package="cn.kiway">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!--<bean class="cn.kiway.common.utils.SpringContextHolder" lazy-init="false" />  -->

	<!-- sqlSessinFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/SqlMapConfig.xml" />
		<property name="mapperLocations" value="classpath*:cn/kiway/**/mapper/mysql/*.xml"/>
	</bean>

	<!-- mapper批量扫描，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册
	遵循规范：将mapper.java和mapper.xml映射文件名称保持一致，且在一个目录 中
	自动扫描出来的mapper的bean的id为mapper类名（首字母小写）
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描的包名
		如果扫描多个包，每个包中间使用半角逗号分隔
		-->
		<property name="basePackage" value="cn.kiway.common.jc.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>


	<!-- 事务管理器 对mybatis操作数据库事务控制，spring使用jdbc的事务控制类 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="recur*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />
			<tx:method name="publish*" propagation="REQUIRED" />
			<tx:method name="use*" propagation="REQUIRED"/>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="page*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="select*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut" expression="execution(* cn.kiway..service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>


	<!--第二个数据源  -->

	<bean id="dataSourceLog" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/kwjctb2?Unicode=true&amp;autoReconnect=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true" />-->
		<!--<property name="username" value="root" />-->
		<!--<property name="password" value="admin" />-->
        <property name="url" value="jdbc:oracle:thin:@192.168.8.113:1521:ORCL" />
        <property name="username" value="kwjctb2" />
        <property name="password" value="missu" />
		<property name="filters" value="stat" />
		<property name="maxActive" value="8" />
		<property name="initialSize" value="2" />
		<property name="maxWait" value="30" />
		<property name="minIdle" value="4" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="maxOpenPreparedStatements" value="20" />
		<property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>
	<!-- sqlSessinFactory -->
	<bean id="sqlSessionFactoryLog" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSourceLog" />
		<property name="mapperLocations" value="classpath*:cn/kiway/**/mapper/mysql/*.xml"/>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描的包名
		如果扫描多个包，每个包中间使用半角逗号分隔
		-->
		<property name="basePackage" value="cn.kiway.common.log.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryLog"/>
	</bean>

	<!-- 事务管理器 对mybatis操作数据库事务控制，spring使用jdbc的事务控制类 -->
	<bean id="transactionManagerLog"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceLog" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManagerLog" />

	<!--配置事务的传播特性 -->
	<tx:advice id="txAdviceLog" transaction-manager="transactionManagerLog">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="recur*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />
			<tx:method name="publish*" propagation="REQUIRED" />
			<tx:method name="use*" propagation="REQUIRED"/>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="page*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="select*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!--那些类的哪些方法参与事务 -->
	<aop:config>
		<aop:advisor advice-ref="txAdviceLog"
					 pointcut="execution (* cn.kiway..service..*.*(..))" />
	</aop:config>
</beans>